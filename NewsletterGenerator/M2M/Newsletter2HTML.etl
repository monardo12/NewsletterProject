rule Newsletter2HTML
	transform
		s:newsletter!Newsletter
	to
		t:html!HTML{
			if(s.table <> null){
				var table = s.table.equivalent();
				t.htmlElements.add(table);
			}
		}

@lazy
rule Table2TABLE
	transform
		s:newsletter!Table
	to
		t:html!TABLE{
			for(row in s.rows){
				t.addElement(row.equivalent());
			}
		}

@lazy
rule Row2TR
	transform
		s:newsletter!Row
	to
		t:html!TR{
			if(s.cells.size() > 1){
				var newTR = new html!TR;
				for(cell in s.cells){
					newTR.addElement(cell.equivalent());
				}
				var newTABLE = new html!TABLE;
				newTABLE.addElement(newTR);
				var newTD = new html!TD;
				newTD.addElement(newTABLE);
				t.addElement(newTD);
			} else {
				t.addElement(s.cells.get(0).equivalent());			
			}
		}

@lazy		
rule Cell2TD
	transform
		s:newsletter!Cell
	to
		t:html!TD{
			for(element in s.elements){
				var htmlElement : html!HTMLElement;
				if(element.isTypeOf(newsletter!Text)){
					htmlElement = element.getHtmlText();
				} else if(element.isTypeOf(newsletter!Button)){
					htmlElement = element.getHtmlButton();
				} else if(element.isTypeOf(newsletter!Image)){
					htmlElement = element.getHtmlImage();
				} else if(element.isTypeOf(newsletter!Video)){
					htmlElement = element.getHtmlVideo();
				} else if(element.isTypeOf(newsletter!Divider)){
					htmlElement = element.getHtmlDivider();
				} 
				t.addElement(htmlElement);
			}
		}
		
operation newsletter!Text getHtmlText() : html!HTMLElement{
	var p = new html!P;
	
	//Add A element if applies
	if(self.link <> null){
		var a = new html!A;
		a.ref = self.link;
		
		//TODO Revisar método addStyle
		var style = new html!Style;
		style.key = html!StyleKey#textDecoration;
		style.value = "none";
		a.styles.add(style);
		//a.addStyle(html!StyleKey#textDecoration, "none");
		p.addElementRecursively(a);
	}
	
	//Add B element if applies
	if(self.fontWeight == newsletter!FontWeight#bold){
		var b = new html!B;
		p.addElementRecursively(b);
	}
	
	//Add I element if applies
	if(self.italic){
		var i = new html!I;
		p.addElementRecursively(i);
	}
	
	//Add U element if applies
	if(self.underline){
		var u = new html!U;
		p.addElementRecursively(u);
	}
	
	//Add S element if applies
	if(self.strikethrough){
		var s = new html!S;
		p.addElementRecursively(s);
	}
	
	var font = new html!FONT;
	p.addElementRecursively(font);
	return p;
}

operation newsletter!Button getHtmlButton() : html!HTMLElement{
	var p = self.text.getHtmlText();
	if(p.elements.get(0).isTypeOf(html!A)){
		//Botón con link
	} else {
		//Botón sin link
	}
	
	return p;
}

operation newsletter!Image getHtmlImage() : html!HTMLElement{
	var p = new html!P;
	var img = new html!IMG;
	if(self.link <> null){
		var a = new html!A;
		a.ref = self.link;
		p.addElementRecursively(a);
	}
	p.addElementRecursively(img);
	return p;
}

operation newsletter!Video getHtmlVideo() : html!HTMLElement{
	var preview = self.preview.getHtmlImage();
	var title = self.title.getHtmlText();
	var button = self.button.getHtmlButton();
	
	var div = new html!DIV;
	div.addElement(preview);
	div.addElement(title);
	div.addElement(button);
	return div;
}

operation newsletter!Divider getHtmlDivider() : html!HTMLElement{
	var table = new html!TABLE;
	var tr = new html!TR;
	var td = new html!TD;
	var hr = new html!HR;
	
	td.addElement(hr);
	tr.addElement(td);
	table.addElement(tr);
	return table;
}

operation html!HTMLElement addElement(element : html!HTMLElement){
	self.elements.add(element);
}

operation html!HTMLElement addElementRecursively(element : html!HTMLElement){
	if(self.elements.isEmpty()){
		self.addElement(element);
	} else {
		self.elements.get(0).addElementRecursively(element);
	}
}

operation html!HTMLElement addStyle(key : html!StyleKey, value : String){
	var style = new html!Style;
	style.key = key;
	style.value = value;
	self.styles.add(style);
}